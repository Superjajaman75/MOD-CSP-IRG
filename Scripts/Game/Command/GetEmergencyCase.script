//******************************************************************************************
// #Version 1.0#
//
// 		Includes: Command to get EMT bag
//
//	- PcmdGetEMTBag
//
//		Script by Hoppah, edited by Superjajaman75.
//		
//		Usage of this script in other mods is NOT allowed without permission of Hoppah
//
//******************************************************************************************

const char DUMMY_EQUIPMENT[] 		= "DummyEquipmentCommands";

object PcmdGetEMTBag : CommandScript
{
	PcmdGetEMTBag()
	{
    	SetIcon("getemtbag");
    	SetCursor("getemtbag");
		SetValidTargets(ACTOR_VEHICLE);
		SetGroupID(CGROUP_GETEQUIPMENT);
		SetRestrictions(RESTRICT_NOTDESTROYED | RESTRICT_NOTBURNING);
		SetPossibleCallers(ACTOR_PERSON);
	}


	bool CheckTarget(GameObject *Caller, Actor *Target, int childID)
	{
		if (!Caller->IsValid() || !Target->IsValid() || (Caller->GetID()==Target->GetID()))
			return false;

		if (Target->GetType()==ACTOR_VEHICLE)
		{
			Vehicle v(Target);
			if ((v.HasCommand("FlyTo") || v.HasCommand("VcmdDeInstallRope")) && !v.IsOnGround())
				return false;

			if (StrCompare(v.GetPrototypeFileName(), "mod:Prototypes/Vehicles/06 Objects/wye.e4p") == 0
 			|| StrCompare(v.GetPrototypeFileName(), "mod:Prototypes/Vehicles/06 Objects/fire_hose_extension.e4p") == 0)
				return false;
		}

		GameObject obj(Target);
		if (Caller->GetObjectType()==TYPE_PERSON && Caller->GetEquipment()!=EQUIP_EMERGENCY_CASE &&
			obj.IsValid())
		{
			Person p(Caller);
			if(p.IsValid() && (p.IsCarryingPerson()|| p.HasCommand("HolsterWeapon") || p.IsLinkedWithPerson()|| p.GetFirehoseID()!=0 || p.IsPulling() || p.GetEnteredCarID() != -1))
				return false;

			Vehicle v(Target);
			if (v.IsValid() && !v.IsDestroyed() && v.GetVehicleType() == VT_AMBULANCE_NEF || v.GetVehicleType() == VT_AMBULANCE_ITW || v.GetVehicleType() == VT_AMBULANCE_RTW || v.GetVehicleType() == VT_AMBULANCE_RHC)
				return true;

			return false;
		}

		return false;
	}

	void PushActions(GameObject *Caller, Actor *Target, int childID)
	{
		Vector TargetPos = Target->GetTargetPoint(Caller, TARGET_EQUIPMENTDOOR);
		
		Caller->PushActionMove(ACTION_NEWLIST, TargetPos);
		Caller->PushActionTurnTo(ACTION_APPEND, Target);
		Caller->PushActionGetEquipment(ACTION_APPEND, Target, EQUIP_EMERGENCY_CASE);
		Caller->PushActionExecuteCommand(ACTION_APPEND, DUMMY_EQUIPMENT, Target, 9, false);
	}
};
